#!/usr/bin/env bash

set -o errexit

BUILDER_IMAGE=node:19.0.0

ARGS_LENGTH=$#

if [[ $ARGS_LENGTH == 2 ]]; then
    LAB=$1
    INPUT=$2
fi

if [[ $ARGS_LENGTH == 3 ]]; then
    LAB=$1
    INPUT=$2
    OUTPUT=$3
    touch $OUTPUT
fi

if [[ $ARGS_LENGTH == 4 ]]; then
    LAB=$1
    COMMAND=$2
    INPUT=$3
    OUTPUT=$4
    touch $OUTPUT
fi

case $LAB in
"lab1") LAB=src/lw1/lab1.ts ;;
"lab2") LAB=src/lw2/lab2.ts ;;
"lab3-task1") LAB=src/lw3/task1/lab3.ts ;;
"lab3-task2") LAB=src/lw3/task2/lab3.ts ;;
"lab7") LAB=src/lw7/lab7.ts ;;
esac


echo "pulling $BUILDER_IMAGE..."
docker pull "$BUILDER_IMAGE" >/dev/null

if [[ $ARGS_LENGTH == 2 ]]; then
docker run \
  --volume "$PWD:$PWD" \
  --workdir "$PWD" \
  --volume "$PWD/$INPUT:$PWD/dist/input.csv" \
  --rm \
  -it \
  "$BUILDER_IMAGE" \
  npx ts-node $LAB $INPUT
  exit
fi

docker run \
  --volume "$PWD:$PWD" \
  --workdir "$PWD" \
  --volume "$PWD/$INPUT:$PWD/dist/input.csv" \
  --volume "$PWD/$OUTPUT:$PWD/dist/output.csv" \
  --rm \
  -it \
  "$BUILDER_IMAGE" \
  npx ts-node $LAB $COMMAND $INPUT $OUTPUT
